name: release

on:
  push:
    tags:
     - v[0-9]+.[0-9]+.[0-9]+*
  schedule:
    # Run daily sanity check at 22:08 clock UTC
    - cron: "8 22 * * *"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-nydus-rs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache cargo
      uses: Swatinem/rust-cache@v1
      with:
        target-dir: ./target-fusedev
        cache-on-failure: true
    - name: Build nydus-rs
      run: |
        make docker-static
        sudo mv target-fusedev/x86_64-unknown-linux-musl/release/nydusd nydusd-fusedev
        sudo mv target-fusedev/x86_64-unknown-linux-musl/release/nydus-image .
        sudo mv target-fusedev/x86_64-unknown-linux-musl/release/nydusctl .
        sudo mv target-virtiofs/x86_64-unknown-linux-musl/release/nydusd nydusd-virtiofs
        sudo cp -r misc/configs .
        sudo chown -R $(id -un):$(id -gn) . ~/.cargo/
    - name: store-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nydus-artifacts
        path: |
          nydusd-fusedev
          nydusd-virtiofs
          nydus-image
          nydusctl
          configs
  build-contrib:
    runs-on: ubuntu-latest
    env:
      DOCKER: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'
    - name: cache go mod
      uses: actions/cache@v2
      with:
        path: /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/contrib/nydusify/go.sum', '**/contrib/ctr-remote/go.sum', '**/contrib/docker-nydus-graphdriver/go.sum', '**/contrib/nydus-overlayfs/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go
    - name: build contrib go components
      run: |
        make all-contrib-static-release
        sudo mv contrib/ctr-remote/bin/ctr-remote .
        sudo mv contrib/docker-nydus-graphdriver/bin/nydus_graphdriver .
        sudo mv contrib/nydusify/cmd/nydusify .
        sudo mv contrib/nydus-overlayfs/bin/nydus-overlayfs .
    - name: store-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nydus-artifacts
        path: |
          ctr-remote
          nydus_graphdriver
          nydusify
          nydus-overlayfs
          containerd-nydus-grpc
  upload-artifacts:
    runs-on: ubuntu-latest
    needs: [build-nydus-rs, build-contrib]
    steps:
    - uses: actions/checkout@v2
    - name: install hub
      run: |
        HUB_VER=$(curl -s "https://api.github.com/repos/github/hub/releases/latest" | jq -r .tag_name | sed 's/^v//')
        wget -q -O- https://github.com/github/hub/releases/download/v$HUB_VER/hub-linux-amd64-$HUB_VER.tgz | \
        tar xz --strip-components=2 --wildcards '*/bin/hub'
        sudo mv hub /usr/local/bin/hub
    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: nydus-artifacts
        path: nydus-static
    - name: upload artifacts
      if: ${{ github.event_name == 'push' }}
      run: |
        tag=$(echo $GITHUB_REF | cut -d/ -f3-)
        tarball="nydus-static-$tag-x86_64.tgz"
        chmod +x nydus-static/*
        tar cf - nydus-static | gzip > ${tarball}
        echo "tag=$tag" >> $GITHUB_ENV
        echo "tarball=$tarball" >> $GITHUB_ENV
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Nydus Image Service ${{ env.tag }}"
        generate_release_notes: true
        files:
          ${{ env.tarball }}
