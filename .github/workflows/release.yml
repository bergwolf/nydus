name: release

on:
  push:
    tags:
     - v[0-9]+.[0-9]+.[0-9]+

env:
  CARGO_TERM_COLOR: always

jobs:
  build-nydusify-nydus-snapshotter:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache go mod
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/contrib/nydus-snapshotter/go.sum', '**/contrib/nydusify/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go
    - name: build nydusify
      run: |
        make nydusify-static
    - name: build nydus-snapshotter
      run: |
        make nydus-snapshotter-static
        sudo mv contrib/nydusify/cmd/nydusify .
        sudo mv contrib/nydus-snapshotter/bin/containerd-nydus-grpc .
    - name: store-artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nydus-artifacts
        path: |
          nydusify
          containerd-nydus-grpc
  upload-artifacts:
    runs-on: ubuntu-latest
    needs: [build-nydusify-nydus-snapshotter]
    steps:
    - uses: actions/checkout@v2
    - name: get-release-summary
      run: |
        git fetch --tags -f
        tag=$(echo $GITHUB_REF | cut -d/ -f3-)
        last_release=v$(curl -s "https://api.github.com/repos/dragonflyoss/image-service/releases/latest" | jq -r .tag_name | sed 's/^v//')
        git shortlog $last_release..$tag
        message="$(git shortlog $last_release..$tag)"
        echo "##[set-output name=summary;]${message}"
    - name: install hub
      run: |
        HUB_VER=$(curl -s "https://api.github.com/repos/github/hub/releases/latest" | jq -r .tag_name | sed 's/^v//')
        wget -q -O- https://github.com/github/hub/releases/download/v$HUB_VER/hub-linux-amd64-$HUB_VER.tgz | \
        tar xz --strip-components=2 --wildcards '*/bin/hub'
        sudo mv hub /usr/local/bin/hub
    - name: download artifacts
      uses: actions/download-artifact@v2
      with:
        name: nydus-artifacts
        path: nydus-static
    - name: upload artifacts
      env:
        MESSAGE: ${{ steps.get-release-summary.outputs.summary }}
      run: |
        tag=$(echo $GITHUB_REF | cut -d/ -f3-)
        tarball="nydus-static-$tag-x86_64.tgz"
        chmod +x nydus-static/*
        tar cf - nydus-static | gzip > ${tarball}
        echo "uploading ${tarball} for tag $tag ... with message $MESSAGE"
        GITHUB_TOKEN=${{ secrets.HUB_UPLOAD_TOKEN }} hub release create -m "Nydus Image Service $tag" -m "$MESSAGE" -a "${tarball}" "$tag"
